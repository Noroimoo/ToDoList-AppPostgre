{"ast":null,"code":"var _jsxFileName = \"C:\\\\New Development Folder\\\\ToDoAppForTest\\\\frontend\\\\src\\\\components\\\\Task.js\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport './Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = props => {\n  // DELETE Task\n  const deleteTask = async () => {\n    try {\n      await axios.delete('http://localhost:5000/tasks/' + props.task.id); // It will wait until delete request is finished\n      window.location = '/'; // This should trigger a re-render of your component\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Rest of the component...\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"task-title\",\n      children: props.task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"task-description\",\n      children: props.task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"task-status\",\n        children: props.task.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteTask,\n      className: \"task-button task-button-delete\",\n      children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/edit/\" + props.task.id,\n      className: \"task-button task-button-edit\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["axios","Link","jsxDEV","_jsxDEV","Task","props","deleteTask","delete","task","id","window","location","error","console","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","status","onClick","to","_c","$RefreshReg$"],"sources":["C:/New Development Folder/ToDoAppForTest/frontend/src/components/Task.js"],"sourcesContent":["import axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Task.css';\r\n\r\nconst Task = props => {\r\n  // DELETE Task\r\nconst deleteTask = async () => {\r\n  try {\r\n    await axios.delete('http://localhost:5000/tasks/' + props.task.id); // It will wait until delete request is finished\r\n    window.location = '/'; // This should trigger a re-render of your component\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n\r\n  // Rest of the component...\r\n  return (\r\n    <div className=\"task-container\">\r\n      <h3 className=\"task-title\">{props.task.title}</h3>\r\n      <p className=\"task-description\">{props.task.description}</p>\r\n      <p>Status: <span className=\"task-status\">{props.task.status}</span></p>\r\n      <button onClick={deleteTask} className=\"task-button task-button-delete\">Удалить</button>\r\n      <Link to={\"/edit/\" + props.task.id} className=\"task-button task-button-edit\">Edit</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGC,KAAK,IAAI;EACpB;EACF,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMN,KAAK,CAACO,MAAM,CAAC,8BAA8B,GAAGF,KAAK,CAACG,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC;MACpEC,MAAM,CAACC,QAAQ,GAAG,GAAG,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;;EAGC;EACA,oBACET,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BZ,OAAA;MAAIW,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEV,KAAK,CAACG,IAAI,CAACQ;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClDjB,OAAA;MAAGW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAEV,KAAK,CAACG,IAAI,CAACa;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5DjB,OAAA;MAAAY,QAAA,GAAG,UAAQ,eAAAZ,OAAA;QAAMW,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEV,KAAK,CAACG,IAAI,CAACc;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvEjB,OAAA;MAAQoB,OAAO,EAAEjB,UAAW;MAACQ,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxFjB,OAAA,CAACF,IAAI;MAACuB,EAAE,EAAE,QAAQ,GAAGnB,KAAK,CAACG,IAAI,CAACC,EAAG;MAACK,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrF,CAAC;AAEV,CAAC;AAACK,EAAA,GAtBIrB,IAAI;AAwBV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}